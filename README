mkosi - Create legacy-free OS images

        A fancy wrapper around "dnf --installroot", "debootstrap" and
        "pacstrap", that may generate disk images with a number of
        bells and whistles.

SUPPORTED OUTPUT FORMATS:
        The following output formats are supported:
        - Raw GPT disk image, with ext4 as root ("raw_gpt")
        - Raw GPT disk image, with btrfs as root ("raw_btrfs")
        - Plain directory ("directory")
        - btrfs subvolume, with separate subvolumes for /var, /home, /srv, /var/tmp ("subvolume")
        - Tarball ("tar")

        When a GPT disk image is created, the following additional
        options are available:

        - A swap partition may be added in
        - The image is made bootable on EFI systems
        - The resulting image file is compressed with XZ

        When a GPT or TAR image is created, a SHA256SUM may optionally
        be created.

COMPATIBILITY:
        Generated images are legacy, free. This means no MBR disk
        labels are supported, and only systemd based images may be
        generated. Moreover, for bootable images only EFI systems are
        supported.

        All generated GPT disk images may be booted directly with:

                systemd-nspawn -bi image.raw

        EFI bootable GPT disk images additionaly also work when booted
        directly by EFI systems, for example in KVM via:

                qemu-kvm -m 512 -smp 2 -bios /usr/share/edk2/ovmf/OVMF_CODE.fd -hda image.raw

        EFI bootable GPT images are larger than plain GPT images, as
        they additionally carry an EFI system partition containing a
        boot loader, as well as a kernel, kernel modules, udev and
        more.

        All directory or btrfs subvolume images may be booted directly
        with:

                systemd-nspawn -bD image

SUPPORTED DISTRIBUTIONS:
        - Fedora
        - Debian
        - Ubuntu
        - ArchLinux (incomplete)

EXAMPLES:
        Create and run a raw GPT image with ext4, as "image.raw"
        # mkosi
        # systemd-nspawn -b -i image.raw

        Create and run a bootable btrfs GPT image, as "foobar.raw"
        # mkosi -F raw_btrfs --bootable -o foobar.raw
        # systemd-nspawn -b -i foobar.raw
        # qemu-kvm -m 512 -smp 2 -bios /usr/share/edk2/ovmf/OVMF_CODE.fd -hda foobar.raw

        Create and run a Fedora image into a plain directory:
        # mkosi -F directory -o quux
        # systemd-nspawn -b quux

        Create a compressed tar ball "image.raw.xz" and add a checksum file, and install SSH into it:
        # mkosi -d fedora -F tar --checksum --compress --package=openssh-clients

REQUIREMENTS:
        To use this on Fedora, you need:

                dnf install python3 debootstrap arch-install-scripts xz btrfs-progs dosfstools

        This should work on other distributions too, as long as the
        same dependencies are available there, but it's untested there.
